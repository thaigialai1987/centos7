#1 cache laravel
php artisan config:cache
php artisan route:cache
composer dumpautoload --optimize

# tang toc mariadb
log slow query
How to enable?
Login to MySQL, database abc_prod

shell> mysql -u root -p abc_prod
Enable slow query log

mysql> SET GLOBAL slow_query_log = 'ON';
Check path to log file

mysql> SHOW VARIABLES LIKE 'slow_query_log_file';
+---------------------+-----------------------------+
| Variable_name       | Value                       |
+---------------------+-----------------------------+
| slow_query_log_file | /var/lib/mysql/db3-slow.log |
+---------------------+-----------------------------+
1 row in set (0.00 sec)
Change long query time to 5 seconds - default is 10 seconds

mysql> SET GLOBAL long_query_time = 5;
Logout MySQL session then login again

Take a small test to ensure slow query log is enable

mysql> SELECT SLEEP(10);
Check sleep on slow query log

How to turn it off?
mysql> SET GLOBAL slow_query_log = 'OFF';

Tối ưu MariaDB cho hệ thống 4GB RAM

SHOW VARIABLES LIKE 'have_query_cache';



key_buffer = 256M (cho hệ thống 1GB RAM), 128M (cho 2GB RAM), 256 (cho 4GB RAM)
join_buffer_size = 4M (cho 1GB RAM), 2M (cho 2GB RAM), 4M (cho 4GB RAM)
sort_buffer_size = 4M (cho 1GB RAM), 2M (cho 2GB RAM), 4M (cho 4GB RAM)
read_buffer_size = 4M (cho 1GB RAM), 2M (cho 2GB RAM), 4M (cho 4GB RAM)
read_rnd_buffer_size = 3072K (cho 1GB RAM), 1536K (cho 2GB RAM), 3072K for 4GB (RAM)
myisam_sort_buffer_size = 128M (cho 1GB RAM), 64M (cho 2GB RAM), 128 (cho 4GB RAM)
query_cache_type = 1 (0 nghĩa là tắt, 1 là bật và 2 là chế độ "demand")
query_cache_size = 128M (cho 1GB RAM), 63M (cho 2GB RAM), 128M (cho 4GB RAM)
query_cache_limit = 4M (cho 1GB RAM), 2M (cho 2GB RAM), 4M (cho 4GB RAM)
thread_cache_size = 8 đến 64 tùy vào tài nguyên thừa của RAM

[isamchk]

key_buffer và sort_buffer = 256M (cho 1GB RAM), 128M (cho 2GB RAM), 256M (cho 4GB RAM)
read_buffer và write_buffer = 64M (cho 1GB RAM), 32M (cho 2GB RAM), 64M (cho 4GB RAM)

[myisamchk]

key_buffer và sort_buffer = 256M (cho 1GB RAM), 128M (cho 2GB RAM), 256M (cho 4GB RAM)
read_buffer và write_buffer = 64M (cho 1GB RAM), 32M (cho 2GB RAM), 64M (cho 4GB RAM)


#3 sư dung nginx

1. Cấu hình worker_processes
worker_processes 2; ## số core cpu
2. Cấu hình worker_connection
worker_connections  1024; ## = core cpu * 1024
events {
    multi_accept on;
    worker_connections  4096;
}
3. Tắt log
http {
....
access_log off;
}
4. Bật nén gzip
gzip on;
gzip_comp_level 2;
gzip_min_length 1440;
gzip_buffers 16 8k;
gzip_types text/xml text/css text/plain text/x-component text/x-js text/richtext text/xsd text/xsl image/svg+xml application/xhtml+xml application/xml image/x-icon application/rdf+xml application/xml+rdf application/rss+xml application/xml+rss application/atom+xml application/xml+atom text/javascript application/javascript application/x-javascript application/json application/x-font-ttf application/x-font-otf font/truetype font/opentype;
gzip_vary on;
gzip_proxied any;
gzip_disable "MSIE [1-6]\."; 
5. Sử dụng FastCGI Cache
6. Cấu hình nginx để chịu được nhiều người online
7. Sendfile, tcp_nodelay và tcp_nopush
8. Sử dụng Keep-alive
upstream app {
      server 127.0.0.1:5000;
      keepalive 16;
    }
9. Bật Browser Cache
nginx.config


 

Tối uu Apache httpd.conf

#
# KeepAlive: Whether or not to allow persistent connections (more than
# one request per connection). Set to "Off" to deactivate.
#
KeepAlive On

#
# MaxKeepAliveRequests: The maximum number of requests to allow
# during a persistent connection. Set to 0 to allow an unlimited amount.
# We recommend you leave this number high, for maximum performance.
#
MaxKeepAliveRequests 50

#
# KeepAliveTimeout: Number of seconds to wait for the next request from the
# same client on the same connection.
#
KeepAliveTimeout 10





Cách 1. Sửa file .htaccess
Gzip compression bằng mod_deflate (khuyên dùng) có thể được kích hoạt bằng cách thêm dòng code sau vào file .htaccess của bạn (hướng dẫn về việc làm thế nào để xác định file .htaccess được chỉ rõ ở đây here):

<IfModule mod_deflate.c>
  AddOutputFilterByType DEFLATE text/html
  AddOutputFilterByType DEFLATE text/css
  AddOutputFilterByType DEFLATE text/javascript
  AddOutputFilterByType DEFLATE text/xml
  AddOutputFilterByType DEFLATE text/plain
  AddOutputFilterByType DEFLATE image/x-icon
  AddOutputFilterByType DEFLATE image/svg+xml
  AddOutputFilterByType DEFLATE application/rss+xml
  AddOutputFilterByType DEFLATE application/javascript
  AddOutputFilterByType DEFLATE application/x-javascript
  AddOutputFilterByType DEFLATE application/xml
  AddOutputFilterByType DEFLATE application/xhtml+xml 
  AddOutputFilterByType DEFLATE application/x-font  
  AddOutputFilterByType DEFLATE application/x-font-truetype  
  AddOutputFilterByType DEFLATE application/x-font-ttf  
  AddOutputFilterByType DEFLATE application/x-font-otf 
  AddOutputFilterByType DEFLATE application/x-font-opentype 
  AddOutputFilterByType DEFLATE application/vnd.ms-fontobject
  AddOutputFilterByType DEFLATE font/ttf 
  AddOutputFilterByType DEFLATE font/otf 
  AddOutputFilterByType DEFLATE font/opentype
# For Older Browsers Which Can't Handle Compression
  BrowserMatch ^Mozilla/4 gzip-only-text/html 
  BrowserMatch ^Mozilla/4\.0[678] no-gzip
  BrowserMatch \bMSIE !no-gzip !gzip-only-text/html
</IfModule>
Nếu server của bạn không hỗ trợ mod_deflate bạn có thể thử mod_gzip để thay thế:

<ifModule mod_gzip.c>
  mod_gzip_on Yes
  mod_gzip_dechunk Yes
  mod_gzip_item_include file \.(html?|txt|css|js|php|pl)$
  mod_gzip_item_include mime ^application/x-javascript.*
  mod_gzip_item_include mime ^text/.*
  mod_gzip_item_exclude rspheader ^Content-Encoding:.*gzip.*
  mod_gzip_item_exclude mime ^image/.* 
  mod_gzip_item_include handler ^cgi-script$
</ifModule>
Khi thay đổi được lưu, gzip compression sẽ được kích hoạt.